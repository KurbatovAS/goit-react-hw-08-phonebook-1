{"ast":null,"code":"import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = state => state.contacts.loading;\n\nconst getFilter = state => state.contacts.filter;\n\nconst getError = state => state.contacts.error;\n\nconst getAllContacts = state => state.contacts.items;\n\nconst getTotalContactCount = state => {\n  const contacts = getAllContacts(state);\n  return contacts.length;\n};\n\nconst getFavoriteContactsCount = createSelector([getAllContacts], contacts => {\n  return contacts.reduce((total, contact) => contact.favorite ? total + 1 : total, 0);\n});\nconst getVisibleContacts = createSelector([getAllContacts, getFilter], (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({\n    name\n  }) => name.toLowerCase().includes(normalizedFilter));\n});\nconst contactsSelectors = {\n  getLoading,\n  getFilter,\n  getError,\n  getAllContacts,\n  getVisibleContacts,\n  getTotalContactCount,\n  getFavoriteContactsCount\n};\nexport default contactsSelectors;","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/redux/contacts/contacts-selectors.js"],"names":["createSelector","getLoading","state","contacts","loading","getFilter","filter","getError","error","getAllContacts","items","getTotalContactCount","length","getFavoriteContactsCount","reduce","total","contact","favorite","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","contactsSelectors"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,OAA7C;;AACA,MAAMC,SAAS,GAAIH,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeG,MAA5C;;AACA,MAAMC,QAAQ,GAAIL,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeK,KAA3C;;AACA,MAAMC,cAAc,GAAIP,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeO,KAAjD;;AAEA,MAAMC,oBAAoB,GAAIT,KAAD,IAAW;AACtC,QAAMC,QAAQ,GAAGM,cAAc,CAACP,KAAD,CAA/B;AACA,SAAOC,QAAQ,CAACS,MAAhB;AACD,CAHD;;AAIA,MAAMC,wBAAwB,GAAGb,cAAc,CAC7C,CAACS,cAAD,CAD6C,EAE5CN,QAAD,IAAc;AACZ,SAAOA,QAAQ,CAACW,MAAT,CACL,CAACC,KAAD,EAAQC,OAAR,KAAqBA,OAAO,CAACC,QAAR,GAAmBF,KAAK,GAAG,CAA3B,GAA+BA,KAD/C,EAEL,CAFK,CAAP;AAID,CAP4C,CAA/C;AAUA,MAAMG,kBAAkB,GAAGlB,cAAc,CACvC,CAACS,cAAD,EAAiBJ,SAAjB,CADuC,EAEvC,CAACF,QAAD,EAAWG,MAAX,KAAsB;AACpB,QAAMa,gBAAgB,GAAGb,MAAM,CAACc,WAAP,EAAzB;AACA,SAAOjB,QAAQ,CAACG,MAAT,CAAgB,CAAC;AAAEe,IAAAA;AAAF,GAAD,KACrBA,IAAI,CAACD,WAAL,GAAmBE,QAAnB,CAA4BH,gBAA5B,CADK,CAAP;AAGD,CAPsC,CAAzC;AAUA,MAAMI,iBAAiB,GAAG;AACxBtB,EAAAA,UADwB;AAExBI,EAAAA,SAFwB;AAGxBE,EAAAA,QAHwB;AAIxBE,EAAAA,cAJwB;AAKxBS,EAAAA,kBALwB;AAMxBP,EAAAA,oBANwB;AAOxBE,EAAAA;AAPwB,CAA1B;AASA,eAAeU,iBAAf","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoading = (state) => state.contacts.loading;\nconst getFilter = (state) => state.contacts.filter;\nconst getError = (state) => state.contacts.error;\nconst getAllContacts = (state) => state.contacts.items;\n\nconst getTotalContactCount = (state) => {\n  const contacts = getAllContacts(state);\n  return contacts.length;\n};\nconst getFavoriteContactsCount = createSelector(\n  [getAllContacts],\n  (contacts) => {\n    return contacts.reduce(\n      (total, contact) => (contact.favorite ? total + 1 : total),\n      0\n    );\n  }\n);\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nconst contactsSelectors = {\n  getLoading,\n  getFilter,\n  getError,\n  getAllContacts,\n  getVisibleContacts,\n  getTotalContactCount,\n  getFavoriteContactsCount,\n};\nexport default contactsSelectors;\n"]},"metadata":{},"sourceType":"module"}