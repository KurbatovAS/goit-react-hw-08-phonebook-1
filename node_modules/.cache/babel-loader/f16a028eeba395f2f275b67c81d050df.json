{"ast":null,"code":"import axios from \"axios\";\nimport shortid from \"shortid\";\nimport { addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, toggleFavoriteRequest, toggleFavoriteSuccess, toggleFavoriteError, fetchContactsRequest, fetchContactsSuccess, fetchContactsError } from \"./contacts-actions\";\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = ({\n  id,\n  name,\n  number,\n  favorite\n}) => dispatch => {\n  const contact = {\n    id: shortid(),\n    name,\n    number,\n    favorite: false\n  };\n  console.log(contact);\n  dispatch(addContactRequest());\n  axios.post(\"/contacts\", contact).then(({\n    data\n  }) => dispatch(addContactSuccess(contact))).catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${contactId}`).then(() => dispatch(deleteContactSuccess(contactId))).catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst toggleFavorite = ({\n  id,\n  favorite\n}) => dispatch => {\n  const update = {\n    favorite\n  };\n  dispatch(toggleFavoriteRequest());\n  axios.patch(`/contacts/${id}`, update).then(({\n    data\n  }) => dispatch(toggleFavoriteSuccess(data))).catch(error => dispatch(toggleFavoriteError(error.message)));\n};\n\nconst ContactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  toggleFavorite\n};\nexport default ContactsOperations;","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/redux/contacts/contacts-operations.js"],"names":["axios","shortid","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","toggleFavoriteRequest","toggleFavoriteSuccess","toggleFavoriteError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","defaults","baseURL","fetchContacts","dispatch","data","get","error","message","addContact","id","name","number","favorite","contact","console","log","post","then","catch","deleteContact","contactId","delete","toggleFavorite","update","patch","ContactsOperations"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,qBAPF,EAQEC,qBARF,EASEC,mBATF,EAUEC,oBAVF,EAWEC,oBAXF,EAYEC,kBAZF,QAaO,oBAbP;AAeAb,KAAK,CAACc,QAAN,CAAeC,OAAf,GAAyB,wCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAU,WAAV,CAAvB;AAEAF,IAAAA,QAAQ,CAACL,oBAAoB,CAACM,IAAD,CAArB,CAAR;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACJ,kBAAkB,CAACO,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD;AACF,CAVD;;AAYA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAqCT,QAAD,IAAc;AACnE,QAAMU,OAAO,GAAG;AACdJ,IAAAA,EAAE,EAAEtB,OAAO,EADG;AAEduB,IAAAA,IAFc;AAGdC,IAAAA,MAHc;AAIdC,IAAAA,QAAQ,EAAE;AAJI,GAAhB;AAMAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAV,EAAAA,QAAQ,CAACf,iBAAiB,EAAlB,CAAR;AAEAF,EAAAA,KAAK,CACF8B,IADH,CACQ,WADR,EACqBH,OADrB,EAEGI,IAFH,CAEQ,CAAC;AAAEb,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACd,iBAAiB,CAACwB,OAAD,CAAlB,CAF9B,EAGGK,KAHH,CAGUZ,KAAD,IAAWH,QAAQ,CAACb,eAAe,CAACgB,KAAK,CAACC,OAAP,CAAhB,CAH5B;AAID,CAdD;;AAgBA,MAAMY,aAAa,GAAIC,SAAD,IAAgBjB,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AAEAL,EAAAA,KAAK,CACFmC,MADH,CACW,aAAYD,SAAU,EADjC,EAEGH,IAFH,CAEQ,MAAMd,QAAQ,CAACX,oBAAoB,CAAC4B,SAAD,CAArB,CAFtB,EAGGF,KAHH,CAGUZ,KAAD,IAAWH,QAAQ,CAACV,kBAAkB,CAACa,KAAK,CAACC,OAAP,CAAnB,CAH5B;AAID,CAPD;;AASA,MAAMe,cAAc,GAAG,CAAC;AAAEb,EAAAA,EAAF;AAAMG,EAAAA;AAAN,CAAD,KAAuBT,QAAD,IAAc;AACzD,QAAMoB,MAAM,GAAG;AAAEX,IAAAA;AAAF,GAAf;AAEAT,EAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;AAEAR,EAAAA,KAAK,CACFsC,KADH,CACU,aAAYf,EAAG,EADzB,EAC4Bc,MAD5B,EAEGN,IAFH,CAEQ,CAAC;AAAEb,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACR,qBAAqB,CAACS,IAAD,CAAtB,CAF9B,EAGGc,KAHH,CAGUZ,KAAD,IAAWH,QAAQ,CAACP,mBAAmB,CAACU,KAAK,CAACC,OAAP,CAApB,CAH5B;AAID,CATD;;AAWA,MAAMkB,kBAAkB,GAAG;AACzBvB,EAAAA,aADyB;AAEzBM,EAAAA,UAFyB;AAGzBW,EAAAA,aAHyB;AAIzBG,EAAAA;AAJyB,CAA3B;AAMA,eAAeG,kBAAf","sourcesContent":["import axios from \"axios\";\nimport shortid from \"shortid\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  toggleFavoriteRequest,\n  toggleFavoriteSuccess,\n  toggleFavoriteError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = ({ id, name, number, favorite }) => (dispatch) => {\n  const contact = {\n    id: shortid(),\n    name,\n    number,\n    favorite: false,\n  };\n  console.log(contact);\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(contact)))\n    .catch((error) => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error.message)));\n};\n\nconst toggleFavorite = ({ id, favorite }) => (dispatch) => {\n  const update = { favorite };\n\n  dispatch(toggleFavoriteRequest());\n\n  axios\n    .patch(`/contacts/${id}`, update)\n    .then(({ data }) => dispatch(toggleFavoriteSuccess(data)))\n    .catch((error) => dispatch(toggleFavoriteError(error.message)));\n};\n\nconst ContactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  toggleFavorite,\n};\nexport default ContactsOperations;\n"]},"metadata":{},"sourceType":"module"}