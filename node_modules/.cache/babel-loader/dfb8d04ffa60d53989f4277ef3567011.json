{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/ContactEditor/ContactEditor.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport Notiflix from \"notiflix\";\nimport style from \"./ContactEditor.module.css\";\nimport { contactsSelectors } from \"../../redux/contacts\";\nimport { contactsOperations } from \"../../redux/contacts\";\n\nfunction ContactEditor({\n  toggleModal\n}) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      Notiflix.Notify.failure(`${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      Notiflix.Notify.failure(`${number} is already in contacts.`);\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      Notiflix.Notify.failure(\"Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact({\n        name,\n        number\n      }));\n    }\n\n    setNumber(\"\");\n    toggleModal();\n    this.props.onSave();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: style.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: style.avatar,\n      alt: \"avatar\",\n      src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReK6pUGk66nxuoUjAgPyXQ55neCkfFdO8EDjah4hqBn_-VrQKYo5oI_citL5mS9_ZWgaQ&usqp=CAU\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.label,\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.input,\n        type: \"text\",\n        name: \"name\",\n        onChange: event => setName(event.target.value),\n        value: name,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        placeholder: \"Sofia Protsiv\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: style.label,\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: style.input,\n        type: \"tel\",\n        name: \"number\",\n        onChange: event => setNumber(event.target.value),\n        value: number,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"number number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        placeholder: \"111-11-11\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: style.button,\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactEditor, \"0atX5ZliDMmHq7Kn3AOgzlV2VL4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ContactEditor;\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsOperations.addContact(name, number))\n});\n\nexport default connect(null, mapDispatchToProps)(ContactEditor);\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactEditor\");","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/ContactEditor/ContactEditor.js"],"names":["useState","useSelector","useDispatch","connect","Notiflix","style","contactsSelectors","contactsOperations","ContactEditor","toggleModal","name","setName","number","setNumber","contacts","getVisibleContacts","dispatch","handleSubmit","event","preventDefault","find","contact","toLowerCase","Notify","failure","trim","addContact","props","onSave","form","avatar","label","input","target","value","button","mapDispatchToProps","onSubmit"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport Notiflix from \"notiflix\";\nimport style from \"./ContactEditor.module.css\";\nimport { contactsSelectors } from \"../../redux/contacts\";\nimport { contactsOperations } from \"../../redux/contacts\";\n\nfunction ContactEditor({ toggleModal }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${name} is already in contacts.`);\n    } else if (contacts.find((contact) => contact.number === number)) {\n      Notiflix.Notify.failure(`${number} is already in contacts.`);\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      Notiflix.Notify.failure(\"Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact({ name, number }));\n    }\n\n    setNumber(\"\");\n    toggleModal();\n    this.props.onSave();\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <img\n        className={style.avatar}\n        alt=\"avatar\"\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReK6pUGk66nxuoUjAgPyXQ55neCkfFdO8EDjah4hqBn_-VrQKYo5oI_citL5mS9_ZWgaQ&usqp=CAU\"\n      />\n\n      <label className={style.label}>\n        Name\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          onChange={(event) => setName(event.target.value)}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Sofia Protsiv\"\n          required\n        />\n      </label>\n      <label className={style.label}>\n        Number\n        <input\n          className={style.input}\n          type=\"tel\"\n          name=\"number\"\n          onChange={(event) => setNumber(event.target.value)}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"111-11-11\"\n          required\n        />\n      </label>\n      <button className={style.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactEditor);\n"]},"metadata":{},"sourceType":"module"}