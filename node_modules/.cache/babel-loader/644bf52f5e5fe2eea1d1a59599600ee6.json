{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/views/ContactView.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Container from \"../components/Container\";\nimport ContactsList from \"../components/ContactList\";\nimport ContactEditor from \"../components/ContactEditor\";\nimport Filter from \"../components/ContactFilter\";\nimport Modal from \"../components/Modal\";\nimport IconButton from \"../components/IconButton\";\nimport { ReactComponent as AddIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../icons/add.svg\";\nimport { contactsOperations, contactsSelectors } from \"../redux/contacts\";\nimport Loader from \"components/Loader\";\nconst barStyles = {\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  marginBottom: 20\n};\nexport default function ContactsView(params) {\n  _s();\n\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: barStyles,\n      children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: toggleModal,\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C todo\",\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          width: \"30\",\n          height: \"30\",\n          fill: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), isLoadingContacts && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactsList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: toggleModal,\n      children: /*#__PURE__*/_jsxDEV(ContactEditor, {\n        onSave: toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactsView, \"9qKURr3a4IWOvo/Rw2Wh0XiByKQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsView\");","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/views/ContactView.js"],"names":["useState","useEffect","useDispatch","useSelector","Container","ContactsList","ContactEditor","Filter","Modal","IconButton","contactsOperations","contactsSelectors","Loader","barStyles","display","alignItems","marginBottom","ContactsView","params","dispatch","isLoadingContacts","getLoading","isModalOpen","setIsModalOpen","toggleModal","state","fetchContacts"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,SAASC,kBAAT,EAA6BC,iBAA7B,QAAsD,mBAAtD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,MADO;AAEhBC,EAAAA,UAAU,EAAE,UAFI;AAGhBC,EAAAA,YAAY,EAAE;AAHE,CAAlB;AAMA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;AAAA;;AAC3C,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,iBAAiB,GAAGjB,WAAW,CAACQ,iBAAiB,CAACU,UAAnB,CAArC;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMwB,WAAW,GAAG,MAAMD,cAAc,CAAEE,KAAD,IAAW,CAACA,KAAb,CAAxC;;AAEAxB,EAAAA,SAAS,CAAC,MAAMkB,QAAQ,CAACT,kBAAkB,CAACgB,aAAnB,EAAD,CAAf,EAAqD,CAACP,QAAD,CAArD,CAAT;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,KAAK,EAAEN,SAAZ;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEW,WAArB;AAAkC,sBAAW,uDAA7C;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,IAAf;AAAoB,UAAA,MAAM,EAAC,IAA3B;AAAgC,UAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,EAMGJ,iBAAiB,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cANxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAVF,EAYGE,WAAW,iBACV,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEE,WAAhB;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA7BuBP,Y;UACLf,W,EACSC,W;;;KAFJc,Y","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Container from \"../components/Container\";\nimport ContactsList from \"../components/ContactList\";\nimport ContactEditor from \"../components/ContactEditor\";\nimport Filter from \"../components/ContactFilter\";\nimport Modal from \"../components/Modal\";\nimport IconButton from \"../components/IconButton\";\nimport { ReactComponent as AddIcon } from \"../icons/add.svg\";\nimport { contactsOperations, contactsSelectors } from \"../redux/contacts\";\nimport Loader from \"components/Loader\";\n\nconst barStyles = {\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  marginBottom: 20,\n};\n\nexport default function ContactsView(params) {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen((state) => !state);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <div style={barStyles}>\n        <Filter />\n        <IconButton onClick={toggleModal} aria-label=\"Добавить todo\">\n          <AddIcon width=\"30\" height=\"30\" fill=\"#fff\" />\n        </IconButton>\n\n        {isLoadingContacts && <Loader />}\n      </div>\n\n      <ContactsList />\n\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <ContactEditor onSave={toggleModal} />\n        </Modal>\n      )}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}