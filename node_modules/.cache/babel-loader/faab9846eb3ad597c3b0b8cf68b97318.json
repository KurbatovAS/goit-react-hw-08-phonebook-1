{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\nexport default function PrivateRoute({\n  children,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  _s();\n\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return /*#__PURE__*/_jsxDEV(Route, { ...routeProps,\n    children: isLoggedIn ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: redirectTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateRoute, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/PrivateRoute.js"],"names":["useSelector","Route","Redirect","authSelectors","PrivateRoute","children","redirectTo","routeProps","isLoggedIn","getIsLoggedIn"],"mappings":";;;;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,aAAT,QAA8B,eAA9B;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,QADmC;AAEnCC,EAAAA,UAAU,GAAG,GAFsB;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AAAA;;AACD,QAAMC,UAAU,GAAGR,WAAW,CAACG,aAAa,CAACM,aAAf,CAA9B;AACA,sBACE,QAAC,KAAD,OAAWF,UAAX;AAAA,cACGC,UAAU,GAAGH,QAAH,gBAAc,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEC;AAAd;AAAA;AAAA;AAAA;AAAA;AAD3B;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAXuBF,Y;UAKHJ,W;;;KALGI,Y","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}