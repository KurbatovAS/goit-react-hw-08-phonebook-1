{"ast":null,"code":"import _slicedToArray from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import Container from\"../components/Container\";import ContactsList from\"../components/ContactList\";import ContactEditor from\"../components/ContactEditor\";import Filter from\"../components/ContactFilter\";import Stats from\"../components/Stats\";import Modal from\"../components/Modal\";import IconButton from\"../components/IconButton\";import{ReactComponent as AddIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../icons/add.svg\";import{contactsOperations,contactsSelectors}from\"../redux/contacts\";var barStyles={display:\"flex\",alignItems:\"flex-end\",marginBottom:20};export default function ContactsView(params){var dispatch=useDispatch();var isLoadingContacts=useSelector(contactsSelectors.getLoading);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModalOpen=_useState2[0],setIsModalOpen=_useState2[1];var toggleModal=function toggleModal(){return setIsModalOpen(function(state){return!state;});};useEffect(function(){return dispatch(contactsOperations.fetchContacts());},[dispatch]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(\"div\",{style:barStyles,children:[/*#__PURE__*/_jsx(Filter,{}),/*#__PURE__*/_jsx(Stats,{}),/*#__PURE__*/_jsx(IconButton,{onClick:toggleModal,\"aria-label\":\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C todo\",children:/*#__PURE__*/_jsx(AddIcon,{width:\"40\",height:\"40\",fill:\"#fff\"})}),isLoadingContacts&&/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0430\\u0435\\u043C...\"})]}),/*#__PURE__*/_jsx(ContactsList,{}),isModalOpen&&/*#__PURE__*/_jsx(Modal,{onClose:toggleModal,children:/*#__PURE__*/_jsx(ContactEditor,{onSave:toggleModal})})]});}","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/views/ContactView.js"],"names":["useState","useEffect","useDispatch","useSelector","Container","ContactsList","ContactEditor","Filter","Stats","Modal","IconButton","contactsOperations","contactsSelectors","barStyles","display","alignItems","marginBottom","ContactsView","params","dispatch","isLoadingContacts","getLoading","isModalOpen","setIsModalOpen","toggleModal","state","fetchContacts"],"mappings":"sRAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,C,4FAEA,OAASC,kBAAT,CAA6BC,iBAA7B,KAAsD,mBAAtD,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,OAAO,CAAE,MADO,CAEhBC,UAAU,CAAE,UAFI,CAGhBC,YAAY,CAAE,EAHE,CAAlB,CAMA,cAAe,SAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8B,CAC3C,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CACA,GAAMkB,CAAAA,iBAAiB,CAAGjB,WAAW,CAACS,iBAAiB,CAACS,UAAnB,CAArC,CAF2C,cAILrB,QAAQ,CAAC,KAAD,CAJH,wCAIpCsB,WAJoC,eAIvBC,cAJuB,eAK3C,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,cAAc,CAAC,SAACE,KAAD,QAAW,CAACA,KAAZ,EAAD,CAApB,EAApB,CAEAxB,SAAS,CAAC,iBAAMkB,CAAAA,QAAQ,CAACR,kBAAkB,CAACe,aAAnB,EAAD,CAAd,EAAD,CAAqD,CAACP,QAAD,CAArD,CAAT,CAEA,mBACE,MAAC,SAAD,yBACE,aAAK,KAAK,CAAEN,SAAZ,wBACE,KAAC,MAAD,IADF,cAEE,KAAC,KAAD,IAFF,cAGE,KAAC,UAAD,EAAY,OAAO,CAAEW,WAArB,CAAkC,aAAW,uDAA7C,uBACE,KAAC,OAAD,EAAS,KAAK,CAAC,IAAf,CAAoB,MAAM,CAAC,IAA3B,CAAgC,IAAI,CAAC,MAArC,EADF,EAHF,CAOGJ,iBAAiB,eAAI,iFAPxB,GADF,cAWE,KAAC,YAAD,IAXF,CAaGE,WAAW,eACV,KAAC,KAAD,EAAO,OAAO,CAAEE,WAAhB,uBACE,KAAC,aAAD,EAAe,MAAM,CAAEA,WAAvB,EADF,EAdJ,GADF,CAqBD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Container from \"../components/Container\";\nimport ContactsList from \"../components/ContactList\";\nimport ContactEditor from \"../components/ContactEditor\";\nimport Filter from \"../components/ContactFilter\";\nimport Stats from \"../components/Stats\";\nimport Modal from \"../components/Modal\";\nimport IconButton from \"../components/IconButton\";\nimport { ReactComponent as AddIcon } from \"../icons/add.svg\";\nimport { contactsOperations, contactsSelectors } from \"../redux/contacts\";\n\nconst barStyles = {\n  display: \"flex\",\n  alignItems: \"flex-end\",\n  marginBottom: 20,\n};\n\nexport default function ContactsView(params) {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen((state) => !state);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <Container>\n      <div style={barStyles}>\n        <Filter />\n        <Stats />\n        <IconButton onClick={toggleModal} aria-label=\"Добавить todo\">\n          <AddIcon width=\"40\" height=\"40\" fill=\"#fff\" />\n        </IconButton>\n\n        {isLoadingContacts && <h1>Загружаем...</h1>}\n      </div>\n\n      <ContactsList />\n\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <ContactEditor onSave={toggleModal} />\n        </Modal>\n      )}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}