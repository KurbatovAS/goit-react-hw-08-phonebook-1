{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{toast}from'react-toastify';import authActions from'./auth-actions';axios.defaults.baseURL='https://connections-api.herokuapp.com';// Обьект токена\nvar token={set:function set(token){axios.defaults.headers.common.Authorization=\"Bearer \".concat(token);},unset:function unset(){axios.defaults.headers.common.Authorization='';}};// Операция регистрации юзера\nvar register=function register(credentials){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(authActions.registerRequest());_context.prev=1;_context.next=4;return axios.post('/users/signup',credentials);case 4:_yield$axios$post=_context.sent;data=_yield$axios$post.data;token.set(data.token);dispatch(authActions.registerSuccess(data));_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);dispatch(authActions.registerError(_context.t0.message));toast.error(_context.t0.message);case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// Операция авторизации юзера\nvar logIn=function logIn(credentials){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var _yield$axios$post2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(authActions.loginRequest());_context2.prev=1;_context2.next=4;return axios.post('/users/login',credentials);case 4:_yield$axios$post2=_context2.sent;data=_yield$axios$post2.data;token.set(data.token);dispatch(authActions.loginSuccess(data));_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](1);dispatch(authActions.loginError(_context2.t0.message));toast.error(_context2.t0.message);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[1,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// Операция выхода из профиля\nvar logOut=function logOut(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(authActions.logoutRequest());_context3.prev=1;_context3.next=4;return axios.post('/users/logout');case 4:token.unset();dispatch(authActions.logoutSuccess());_context3.next=12;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](1);dispatch(authActions.logoutError(_context3.t0.message));toast.error(_context3.t0.message);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[1,8]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// Операция получения текущего пользователя (проверяем локальное хранилище через персист)\nvar getCurrentUser=function getCurrentUser(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var _getState,persistedToken,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_getState=getState(),persistedToken=_getState.auth.token;if(persistedToken){_context4.next=3;break;}return _context4.abrupt(\"return\");case 3:token.set(persistedToken);dispatch(authActions.getCurrentUserRequest());_context4.prev=5;_context4.next=8;return axios.get('/users/current');case 8:_yield$axios$get=_context4.sent;data=_yield$axios$get.data;dispatch(authActions.getCurrentUserSuccess(data));_context4.next=17;break;case 13:_context4.prev=13;_context4.t0=_context4[\"catch\"](5);dispatch(authActions.getCurrentUserError(_context4.t0.message));toast.error(_context4.t0.message);case 17:case\"end\":return _context4.stop();}}},_callee4,null,[[5,13]]);}));return function(_x4,_x5){return _ref4.apply(this,arguments);};}();};// eslint-disable-next-line\nexport default{register:register,logIn:logIn,logOut:logOut,getCurrentUser:getCurrentUser};","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/redux/auth/auth-operations.js"],"names":["axios","toast","authActions","defaults","baseURL","token","set","headers","common","Authorization","unset","register","credentials","dispatch","registerRequest","post","data","registerSuccess","registerError","message","error","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n// Обьект токена\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n// Операция регистрации юзера\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n\n    token.set(data.token);\n    dispatch(authActions.registerSuccess(data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Операция авторизации юзера\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n\n    token.set(data.token);\n    dispatch(authActions.loginSuccess(data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Операция выхода из профиля\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// Операция получения текущего пользователя (проверяем локальное хранилище через персист)\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) return;\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const { data } = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n    toast.error(error.message);\n  }\n};\n\n// eslint-disable-next-line\nexport default { register, logIn, logOut, getCurrentUser };\n"]},"metadata":{},"sourceType":"module"}