{"ast":null,"code":"import axios from \"axios\";\nimport { addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, toggleFavoriteRequest, toggleFavoriteSuccess, toggleFavoriteError, fetchContactsRequest, fetchContactsSuccess, fetchContactsError } from \"./contacts-actions\";\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const {\n      data\n    } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = ({\n  name,\n  number\n}) => dispatch => {\n  const contact = {\n    favorite: false,\n    name,\n    number\n  };\n  dispatch(addContactRequest());\n  console.log(contact);\n  axios.post(\"/contacts\", contact).then(({\n    data\n  }) => dispatch(addContactSuccess(data))).catch(error => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n  axios.delete(`/contacts/${contactId}`).then(() => dispatch(deleteContactSuccess(contactId))).catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst toggleCompleted = ({\n  id,\n  completed\n}) => dispatch => {\n  const update = {\n    completed\n  };\n  dispatch(toggleCompletedRequest());\n  axios.patch(`/tasks/${id}`, update).then(({\n    data\n  }) => dispatch(toggleCompletedSuccess(data))).catch(error => dispatch(toggleCompletedError(error.message)));\n};\n\nconst ContactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  toggleCompleted\n};\nexport default ContactsOperations;","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/redux/contacts/contacts-operations.js"],"names":["axios","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","toggleFavoriteRequest","toggleFavoriteSuccess","toggleFavoriteError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","defaults","baseURL","fetchContacts","dispatch","data","get","error","message","addContact","name","number","contact","favorite","console","log","post","then","catch","deleteContact","contactId","delete","toggleCompleted","id","completed","update","toggleCompletedRequest","patch","toggleCompletedSuccess","toggleCompletedError","ContactsOperations"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,kBANF,EAOEC,qBAPF,EAQEC,qBARF,EASEC,mBATF,EAUEC,oBAVF,EAWEC,oBAXF,EAYEC,kBAZF,QAaO,oBAbP;AAeAZ,KAAK,CAACa,QAAN,CAAeC,OAAf,GAAyB,wCAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9CA,EAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;;AAEA,MAAI;AACF,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAU,WAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACL,oBAAoB,CAACM,IAAD,CAArB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdH,IAAAA,QAAQ,CAACJ,kBAAkB,CAACO,KAAK,CAACC,OAAP,CAAnB,CAAR;AACD;AACF,CATD;;AAWA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuBP,QAAD,IAAc;AACrD,QAAMQ,OAAO,GAAG;AACdC,IAAAA,QAAQ,EAAE,KADI;AAEdH,IAAAA,IAFc;AAGdC,IAAAA;AAHc,GAAhB;AAKAP,EAAAA,QAAQ,CAACf,iBAAiB,EAAlB,CAAR;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAxB,EAAAA,KAAK,CACF4B,IADH,CACQ,WADR,EACqBJ,OADrB,EAEGK,IAFH,CAEQ,CAAC;AAAEZ,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACd,iBAAiB,CAACe,IAAD,CAAlB,CAF9B,EAGGa,KAHH,CAGUX,KAAD,IAAWH,QAAQ,CAACb,eAAe,CAACgB,KAAK,CAACC,OAAP,CAAhB,CAH5B;AAID,CAZD;;AAcA,MAAMW,aAAa,GAAIC,SAAD,IAAgBhB,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AAEAJ,EAAAA,KAAK,CACFiC,MADH,CACW,aAAYD,SAAU,EADjC,EAEGH,IAFH,CAEQ,MAAMb,QAAQ,CAACX,oBAAoB,CAAC2B,SAAD,CAArB,CAFtB,EAGGF,KAHH,CAGUX,KAAD,IAAWH,QAAQ,CAACV,kBAAkB,CAACa,KAAK,CAACC,OAAP,CAAnB,CAH5B;AAID,CAPD;;AASA,MAAMc,eAAe,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAwBpB,QAAD,IAAc;AAC3D,QAAMqB,MAAM,GAAG;AAAED,IAAAA;AAAF,GAAf;AAEApB,EAAAA,QAAQ,CAACsB,sBAAsB,EAAvB,CAAR;AAEAtC,EAAAA,KAAK,CACFuC,KADH,CACU,UAASJ,EAAG,EADtB,EACyBE,MADzB,EAEGR,IAFH,CAEQ,CAAC;AAAEZ,IAAAA;AAAF,GAAD,KAAcD,QAAQ,CAACwB,sBAAsB,CAACvB,IAAD,CAAvB,CAF9B,EAGGa,KAHH,CAGUX,KAAD,IAAWH,QAAQ,CAACyB,oBAAoB,CAACtB,KAAK,CAACC,OAAP,CAArB,CAH5B;AAID,CATD;;AAWA,MAAMsB,kBAAkB,GAAG;AACzB3B,EAAAA,aADyB;AAEzBM,EAAAA,UAFyB;AAGzBU,EAAAA,aAHyB;AAIzBG,EAAAA;AAJyB,CAA3B;AAMA,eAAeQ,kBAAf","sourcesContent":["import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  toggleFavoriteRequest,\n  toggleFavoriteSuccess,\n  toggleFavoriteError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = ({ name, number }) => (dispatch) => {\n  const contact = {\n    favorite: false,\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n  console.log(contact);\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error.message)));\n};\n\nconst toggleCompleted = ({ id, completed }) => (dispatch) => {\n  const update = { completed };\n\n  dispatch(toggleCompletedRequest());\n\n  axios\n    .patch(`/tasks/${id}`, update)\n    .then(({ data }) => dispatch(toggleCompletedSuccess(data)))\n    .catch((error) => dispatch(toggleCompletedError(error.message)));\n};\n\nconst ContactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  toggleCompleted,\n};\nexport default ContactsOperations;\n"]},"metadata":{},"sourceType":"module"}