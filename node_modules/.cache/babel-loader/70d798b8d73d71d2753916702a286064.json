{"ast":null,"code":"import _slicedToArray from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{useState}from\"react\";import{useSelector,useDispatch,connect}from\"react-redux\";import Notiflix from\"notiflix\";import style from\"./ContactEditor.module.css\";import{contactsSelectors}from\"../../redux/contacts\";import{contactsOperations}from\"../../redux/contacts\";function ContactEditor(_ref){var onSave=_ref.onSave;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),number=_useState4[0],setNumber=_useState4[1];var contacts=useSelector(contactsSelectors.getVisibleContacts);var dispatch=useDispatch();var handleSubmit=function handleSubmit(event){event.preventDefault();if(contacts.find(function(contact){return contact.name.toLowerCase()===name.toLowerCase();})){Notiflix.Notify.failure(\"\".concat(name,\" is already in contacts.\"));}else if(contacts.find(function(contact){return contact.number===number;})){Notiflix.Notify.failure(\"\".concat(number,\" is already in contacts.\"));}else if(name.trim()===\"\"||number.trim()===\"\"){Notiflix.Notify.failure(\"Enter the contact's name and number phone!\");}else{dispatch(contactsOperations.addContact({name:name,number:number}));}setNumber(\"\");setName(\"\");onSave();};return/*#__PURE__*/_jsxs(\"form\",{className:style.form,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"img\",{className:style.avatar,alt:\"avatar\",src:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReK6pUGk66nxuoUjAgPyXQ55neCkfFdO8EDjah4hqBn_-VrQKYo5oI_citL5mS9_ZWgaQ&usqp=CAU\"}),/*#__PURE__*/_jsxs(\"label\",{className:style.label,children:[\"Name\",/*#__PURE__*/_jsx(\"input\",{className:style.input,type:\"text\",name:\"name\",onChange:function onChange(event){return setName(event.target.value);},value:name,pattern:\"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",title:\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",placeholder:\"Sofia Protsiv\",required:true})]}),/*#__PURE__*/_jsxs(\"label\",{className:style.label,children:[\"Number\",/*#__PURE__*/_jsx(\"input\",{className:style.input,type:\"tel\",name:\"number\",onChange:function onChange(event){return setNumber(event.target.value);},value:number,pattern:\"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",title:\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\",placeholder:\"111-11-11\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{className:style.button,type:\"submit\",children:\"Add contact\"})]});}var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSubmit:function onSubmit(name,number){return dispatch(contactsOperations.addContact(name,number));}};};export default connect(null,mapDispatchToProps)(ContactEditor);","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/ContactEditor/ContactEditor.js"],"names":["useState","useSelector","useDispatch","connect","Notiflix","style","contactsSelectors","contactsOperations","ContactEditor","onSave","name","setName","number","setNumber","contacts","getVisibleContacts","dispatch","handleSubmit","event","preventDefault","find","contact","toLowerCase","Notify","failure","trim","addContact","form","avatar","label","input","target","value","button","mapDispatchToProps","onSubmit"],"mappings":"sRAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,CAAmCC,OAAnC,KAAkD,aAAlD,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,4BAAlB,CACA,OAASC,iBAAT,KAAkC,sBAAlC,CACA,OAASC,kBAAT,KAAmC,sBAAnC,CAEA,QAASC,CAAAA,aAAT,MAAmC,IAAVC,CAAAA,MAAU,MAAVA,MAAU,eACTT,QAAQ,CAAC,EAAD,CADC,wCAC1BU,IAD0B,eACpBC,OADoB,8BAELX,QAAQ,CAAC,EAAD,CAFH,yCAE1BY,MAF0B,eAElBC,SAFkB,eAGjC,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,CAACK,iBAAiB,CAACS,kBAAnB,CAA5B,CACA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA,GAAMe,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GACA,GACEL,QAAQ,CAACM,IAAT,CACE,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACX,IAAR,CAAaY,WAAb,KAA+BZ,IAAI,CAACY,WAAL,EAA5C,EADF,CADF,CAIE,CACAlB,QAAQ,CAACmB,MAAT,CAAgBC,OAAhB,WAA2Bd,IAA3B,8BACD,CAND,IAMO,IAAII,QAAQ,CAACM,IAAT,CAAc,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACT,MAAR,GAAmBA,MAAhC,EAAd,CAAJ,CAA2D,CAChER,QAAQ,CAACmB,MAAT,CAAgBC,OAAhB,WAA2BZ,MAA3B,8BACD,CAFM,IAEA,IAAIF,IAAI,CAACe,IAAL,KAAgB,EAAhB,EAAsBb,MAAM,CAACa,IAAP,KAAkB,EAA5C,CAAgD,CACrDrB,QAAQ,CAACmB,MAAT,CAAgBC,OAAhB,CAAwB,4CAAxB,EACD,CAFM,IAEA,CACLR,QAAQ,CAACT,kBAAkB,CAACmB,UAAnB,CAA8B,CAAEhB,IAAI,CAAJA,IAAF,CAAQE,MAAM,CAANA,MAAR,CAA9B,CAAD,CAAR,CACD,CAEDC,SAAS,CAAC,EAAD,CAAT,CACAF,OAAO,CAAC,EAAD,CAAP,CACAF,MAAM,GACP,CAnBD,CAqBA,mBACE,cAAM,SAAS,CAAEJ,KAAK,CAACsB,IAAvB,CAA6B,QAAQ,CAAEV,YAAvC,wBACE,YACE,SAAS,CAAEZ,KAAK,CAACuB,MADnB,CAEE,GAAG,CAAC,QAFN,CAGE,GAAG,CAAC,sIAHN,EADF,cAOE,eAAO,SAAS,CAAEvB,KAAK,CAACwB,KAAxB,+BAEE,cACE,SAAS,CAAExB,KAAK,CAACyB,KADnB,CAEE,IAAI,CAAC,MAFP,CAGE,IAAI,CAAC,MAHP,CAIE,QAAQ,CAAE,kBAACZ,KAAD,QAAWP,CAAAA,OAAO,CAACO,KAAK,CAACa,MAAN,CAAaC,KAAd,CAAlB,EAJZ,CAKE,KAAK,CAAEtB,IALT,CAME,OAAO,CAAC,wHANV,CAOE,KAAK,CAAC,wIAPR,CAQE,WAAW,CAAC,eARd,CASE,QAAQ,KATV,EAFF,GAPF,cAqBE,eAAO,SAAS,CAAEL,KAAK,CAACwB,KAAxB,iCAEE,cACE,SAAS,CAAExB,KAAK,CAACyB,KADnB,CAEE,IAAI,CAAC,KAFP,CAGE,IAAI,CAAC,QAHP,CAIE,QAAQ,CAAE,kBAACZ,KAAD,QAAWL,CAAAA,SAAS,CAACK,KAAK,CAACa,MAAN,CAAaC,KAAd,CAApB,EAJZ,CAKE,KAAK,CAAEpB,MALT,CAME,OAAO,CAAC,wFANV,CAOE,KAAK,CAAC,+FAPR,CAQE,WAAW,CAAC,WARd,CASE,QAAQ,KATV,EAFF,GArBF,cAmCE,eAAQ,SAAS,CAAEP,KAAK,CAAC4B,MAAzB,CAAiC,IAAI,CAAC,QAAtC,yBAnCF,GADF,CAyCD,CAED,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAClB,QAAD,QAAe,CACxCmB,QAAQ,CAAE,kBAACzB,IAAD,CAAOE,MAAP,QACRI,CAAAA,QAAQ,CAACT,kBAAkB,CAACmB,UAAnB,CAA8BhB,IAA9B,CAAoCE,MAApC,CAAD,CADA,EAD8B,CAAf,EAA3B,CAKA,cAAeT,CAAAA,OAAO,CAAC,IAAD,CAAO+B,kBAAP,CAAP,CAAkC1B,aAAlC,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch, connect } from \"react-redux\";\nimport Notiflix from \"notiflix\";\nimport style from \"./ContactEditor.module.css\";\nimport { contactsSelectors } from \"../../redux/contacts\";\nimport { contactsOperations } from \"../../redux/contacts\";\n\nfunction ContactEditor({ onSave }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${name} is already in contacts.`);\n    } else if (contacts.find((contact) => contact.number === number)) {\n      Notiflix.Notify.failure(`${number} is already in contacts.`);\n    } else if (name.trim() === \"\" || number.trim() === \"\") {\n      Notiflix.Notify.failure(\"Enter the contact's name and number phone!\");\n    } else {\n      dispatch(contactsOperations.addContact({ name, number }));\n    }\n\n    setNumber(\"\");\n    setName(\"\");\n    onSave();\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <img\n        className={style.avatar}\n        alt=\"avatar\"\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReK6pUGk66nxuoUjAgPyXQ55neCkfFdO8EDjah4hqBn_-VrQKYo5oI_citL5mS9_ZWgaQ&usqp=CAU\"\n      />\n\n      <label className={style.label}>\n        Name\n        <input\n          className={style.input}\n          type=\"text\"\n          name=\"name\"\n          onChange={(event) => setName(event.target.value)}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Sofia Protsiv\"\n          required\n        />\n      </label>\n      <label className={style.label}>\n        Number\n        <input\n          className={style.input}\n          type=\"tel\"\n          name=\"number\"\n          onChange={(event) => setNumber(event.target.value)}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"111-11-11\"\n          required\n        />\n      </label>\n      <button className={style.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactEditor);\n"]},"metadata":{},"sourceType":"module"}