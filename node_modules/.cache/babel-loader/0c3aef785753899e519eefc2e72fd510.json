{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{addContactRequest,addContactSuccess,addContactError,deleteContactRequest,deleteContactSuccess,deleteContactError,fetchContactsRequest,fetchContactsSuccess,fetchContactsError}from\"./contacts-actions\";axios.defaults.baseURL=\"https://connections-api.herokuapp.com/\";var fetchContacts=function fetchContacts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(fetchContactsRequest());_context.prev=1;_context.next=4;return axios.get(\"/contacts\");case 4:_yield$axios$get=_context.sent;data=_yield$axios$get.data;dispatch(fetchContactsSuccess(data));_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](1);dispatch(fetchContactsError(_context.t0.message));case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var addContact=function addContact(_ref2){var name=_ref2.name,number=_ref2.number;return function(dispatch){var contact={name:name,number:number,favorite:false};dispatch(addContactRequest());axios.post(\"/contacts\",contact).then(function(_ref3){var data=_ref3.data;return dispatch(addContactSuccess(data));}).catch(function(error){return dispatch(addContactError(error.message));});};};var deleteContact=function deleteContact(contactId){return function(dispatch){dispatch(deleteContactRequest());axios.delete(\"/contacts/\".concat(contactId)).then(function(){return dispatch(deleteContactSuccess(contactId));}).catch(function(error){return dispatch(deleteContactError(error.message));});};};var ContactsOperations={fetchContacts:fetchContacts,addContact:addContact,deleteContact:deleteContact};export default ContactsOperations;","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/redux/contacts/contacts-operations.js"],"names":["axios","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","defaults","baseURL","fetchContacts","dispatch","get","data","message","addContact","name","number","contact","favorite","post","then","catch","error","deleteContact","contactId","delete","ContactsOperations"],"mappings":"yXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,iBADF,CAEEC,iBAFF,CAGEC,eAHF,CAIEC,oBAJF,CAKEC,oBALF,CAMEC,kBANF,CAOEC,oBAPF,CAQEC,oBARF,CASEC,kBATF,KAUO,oBAVP,CAYAT,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAyB,wCAAzB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,kGAAM,iBAAOC,QAAP,4IAC1BA,QAAQ,CAACN,oBAAoB,EAArB,CAAR,CAD0B,sCAIDP,CAAAA,KAAK,CAACc,GAAN,CAAU,WAAV,CAJC,uCAIhBC,IAJgB,kBAIhBA,IAJgB,CAMxBF,QAAQ,CAACL,oBAAoB,CAACO,IAAD,CAArB,CAAR,CANwB,+EAQxBF,QAAQ,CAACJ,kBAAkB,CAAC,YAAMO,OAAP,CAAnB,CAAR,CARwB,oEAAN,gEAAtB,CAYA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,WAAGC,CAAAA,IAAH,OAAGA,IAAH,CAASC,MAAT,OAASA,MAAT,OAAsB,UAACN,QAAD,CAAc,CACrD,GAAMO,CAAAA,OAAO,CAAG,CACdF,IAAI,CAAJA,IADc,CAEdC,MAAM,CAANA,MAFc,CAGdE,QAAQ,CAAE,KAHI,CAAhB,CAKAR,QAAQ,CAACZ,iBAAiB,EAAlB,CAAR,CAEAD,KAAK,CACFsB,IADH,CACQ,WADR,CACqBF,OADrB,EAEGG,IAFH,CAEQ,mBAAGR,CAAAA,IAAH,OAAGA,IAAH,OAAcF,CAAAA,QAAQ,CAACX,iBAAiB,CAACa,IAAD,CAAlB,CAAtB,EAFR,EAGGS,KAHH,CAGS,SAACC,KAAD,QAAWZ,CAAAA,QAAQ,CAACV,eAAe,CAACsB,KAAK,CAACT,OAAP,CAAhB,CAAnB,EAHT,EAID,CAZkB,EAAnB,CAcA,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,QAAe,UAACd,QAAD,CAAc,CACjDA,QAAQ,CAACT,oBAAoB,EAArB,CAAR,CAEAJ,KAAK,CACF4B,MADH,qBACuBD,SADvB,GAEGJ,IAFH,CAEQ,iBAAMV,CAAAA,QAAQ,CAACR,oBAAoB,CAACsB,SAAD,CAArB,CAAd,EAFR,EAGGH,KAHH,CAGS,SAACC,KAAD,QAAWZ,CAAAA,QAAQ,CAACP,kBAAkB,CAACmB,KAAK,CAACT,OAAP,CAAnB,CAAnB,EAHT,EAID,CAPqB,EAAtB,CAQA,GAAMa,CAAAA,kBAAkB,CAAG,CACzBjB,aAAa,CAAbA,aADyB,CAEzBK,UAAU,CAAVA,UAFyB,CAGzBS,aAAa,CAAbA,aAHyB,CAA3B,CAKA,cAAeG,CAAAA,kBAAf","sourcesContent":["import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\n\nconst fetchContacts = () => async (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n};\n\nconst addContact = ({ name, number }) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n    favorite: false,\n  };\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error.message)));\n};\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(deleteContactError(error.message)));\n};\nconst ContactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\nexport default ContactsOperations;\n"]},"metadata":{},"sourceType":"module"}