{"ast":null,"code":"import _objectSpread from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{jsx as _jsx}from\"react/jsx-runtime\";import{useSelector}from\"react-redux\";import{Route,Redirect}from\"react-router-dom\";import{authSelectors}from\"../redux/auth\";/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */export default function PublicRoute(_ref){var children=_ref.children,_ref$restricted=_ref.restricted,restricted=_ref$restricted===void 0?false:_ref$restricted,_ref$redirectTo=_ref.redirectTo,redirectTo=_ref$redirectTo===void 0?\"/\":_ref$redirectTo,routeProps=_objectWithoutProperties(_ref,[\"children\",\"restricted\",\"redirectTo\"]);var isLoggedIn=useSelector(authSelectors.getIsLoggedIn);var shouldRedirect=isLoggedIn&&restricted;return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},routeProps),{},{children:shouldRedirect?/*#__PURE__*/_jsx(Redirect,{to:redirectTo}):children}));}","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/PublicRoute.js"],"names":["useSelector","Route","Redirect","authSelectors","PublicRoute","children","restricted","redirectTo","routeProps","isLoggedIn","getIsLoggedIn","shouldRedirect"],"mappings":"0bAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,aAAT,KAA8B,eAA9B,CAEA;AACA;AACA;AACA;AACA,GAEA,cAAe,SAASC,CAAAA,WAAT,MAKZ,IAJDC,CAAAA,QAIC,MAJDA,QAIC,sBAHDC,UAGC,CAHDA,UAGC,0BAHY,KAGZ,sCAFDC,UAEC,CAFDA,UAEC,0BAFY,GAEZ,iBADEC,UACF,uEACD,GAAMC,CAAAA,UAAU,CAAGT,WAAW,CAACG,aAAa,CAACO,aAAf,CAA9B,CACA,GAAMC,CAAAA,cAAc,CAAGF,UAAU,EAAIH,UAArC,CACA,mBACE,KAAC,KAAD,gCAAWE,UAAX,eACGG,cAAc,cAAG,KAAC,QAAD,EAAU,EAAE,CAAEJ,UAAd,EAAH,CAAkCF,QADnD,GADF,CAKD","sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}