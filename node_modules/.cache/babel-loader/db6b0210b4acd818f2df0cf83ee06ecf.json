{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/UserMenu/UserMenu.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"./default-avatar.png\";\nimport style from \"./UserMenu.module.css\";\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    marginRight: 4\n  },\n  name: {}\n};\n\nfunction stringToColor(string) {\n  let hash = 0;\n\n  for (let i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  if (name.trim().split(\" \").length > 1) {\n    return {\n      sx: {\n        backgroundColor: `${stringToColor(name)}`\n      },\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`\n    };\n  } else {\n    return {\n      style: {\n        backgroundColor: `${stringToColor(name)}`\n      },\n      children: `${name.split(\" \")[0][0]}`\n    };\n  }\n}\n\nexport default function UserMenu() {\n  _s();\n\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const symbol = stringAvatar(name).children;\n  const bgcolor = stringAvatar(name).style.backgroundColor;\n  console.log(`backgroundColor: '${bgcolor}'`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      styles: {\n        backgroundColor: `${bgcolor}`\n      },\n      className: style.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C, \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => dispatch(authOperations.logOut()),\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserMenu, \"1uRDk7lzyRGZPaUmdgbuuOJzLBw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserMenu\");","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/UserMenu/UserMenu.js"],"names":["useDispatch","useSelector","authSelectors","authOperations","defaultAvatar","style","styles","container","display","alignItems","avatar","marginRight","name","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","stringAvatar","trim","split","sx","backgroundColor","children","UserMenu","dispatch","getUserName","symbol","bgcolor","console","log","logOut"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"./default-avatar.png\";\nimport style from \"./UserMenu.module.css\";\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {},\n};\nfunction stringToColor(string) {\n  let hash = 0;\n  for (let i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  return color;\n}\n\nfunction stringAvatar(name) {\n  if (name.trim().split(\" \").length > 1) {\n    return {\n      sx: {\n        backgroundColor: `${stringToColor(name)}`,\n      },\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n    };\n  } else {\n    return {\n      style: {\n        backgroundColor: `${stringToColor(name)}`,\n      },\n      children: `${name.split(\" \")[0][0]}`,\n    };\n  }\n}\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const symbol = stringAvatar(name).children;\n  const bgcolor = stringAvatar(name).style.backgroundColor;\n  console.log(`backgroundColor: '${bgcolor}'`);\n  return (\n    <div style={styles.container}>\n      <span\n        styles={{ backgroundColor: `${bgcolor}` }}\n        className={style.avatar}\n      />\n      <span>Добро пожаловать, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}