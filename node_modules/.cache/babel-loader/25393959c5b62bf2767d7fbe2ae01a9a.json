{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/UserMenu/UserMenu.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"./default-avatar.png\";\nimport style from \"./UserMenu.module.css\";\n\nfunction stringToColor(string) {\n  let hash = 0;\n\n  for (let i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  if (name.trim().split(\" \").length > 1) {\n    return {\n      sx: {\n        backgroundColor: stringToColor(name)\n      },\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`\n    };\n  } else {\n    return {\n      style: {\n        backgroundColor: stringToColor(name)\n      },\n      children: `${name.split(\" \")[0][0]}`\n    };\n  }\n}\n\nexport default function UserMenu() {\n  _s();\n\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const symbol = stringAvatar(name).children;\n  const bgcolor = stringAvatar(name).style;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => dispatch(authOperations.logOut()),\n        children: \"Loh Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this),\n      style: bgcolor,\n      className: style.avatar,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserMenu, \"1uRDk7lzyRGZPaUmdgbuuOJzLBw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserMenu\");","map":{"version":3,"sources":["/Users/sofiaprotsiv/Documents/projects go it/goit-react-hw-08-phonebook/src/components/UserMenu/UserMenu.js"],"names":["useDispatch","useSelector","authSelectors","authOperations","defaultAvatar","style","stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","stringAvatar","name","trim","split","sx","backgroundColor","children","UserMenu","dispatch","getUserName","symbol","bgcolor","container","logOut","avatar"],"mappings":";;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,kBAA9C;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,MAAIC,IAAI,GAAG,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzCD,IAAAA,IAAI,GAAGD,MAAM,CAACI,UAAP,CAAkBF,CAAlB,KAAwB,CAACD,IAAI,IAAI,CAAT,IAAcA,IAAtC,CAAP;AACD;;AAED,MAAII,KAAK,GAAG,GAAZ;;AAEA,OAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,IAAI,CAA5B,EAA+B;AAC7B,UAAMI,KAAK,GAAIL,IAAI,IAAKC,CAAC,GAAG,CAAd,GAAoB,IAAlC;AACAG,IAAAA,KAAK,IAAK,KAAIC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAmB,EAAxB,CAA0BC,MAA1B,CAAiC,CAAC,CAAlC,CAAT;AACD;;AACD,SAAOH,KAAP;AACD;;AAED,SAASI,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAIA,IAAI,CAACC,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,EAAuBT,MAAvB,GAAgC,CAApC,EAAuC;AACrC,WAAO;AACLU,MAAAA,EAAE,EAAE;AACFC,QAAAA,eAAe,EAAEf,aAAa,CAACW,IAAD;AAD5B,OADC;AAILK,MAAAA,QAAQ,EAAG,GAAEL,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,CAAsB,GAAEF,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,CAAsB;AAJtD,KAAP;AAMD,GAPD,MAOO;AACL,WAAO;AACLd,MAAAA,KAAK,EAAE;AACLgB,QAAAA,eAAe,EAAEf,aAAa,CAACW,IAAD;AADzB,OADF;AAILK,MAAAA,QAAQ,EAAG,GAAEL,IAAI,CAACE,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,CAAsB;AAJ9B,KAAP;AAMD;AACF;;AACD,eAAe,SAASI,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAMiB,IAAI,GAAGhB,WAAW,CAACC,aAAa,CAACuB,WAAf,CAAxB;AACA,QAAMC,MAAM,GAAGV,YAAY,CAACC,IAAD,CAAZ,CAAmBK,QAAlC;AACA,QAAMK,OAAO,GAAGX,YAAY,CAACC,IAAD,CAAZ,CAAmBZ,KAAnC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEA,KAAK,CAACuB,SAAtB;AAAA,2BACE;AACE,MAAA,OAAO,EAAE,mBACP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACrB,cAAc,CAAC0B,MAAf,EAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AASE,MAAA,KAAK,EAAEF,OATT;AAUE,MAAA,SAAS,EAAEtB,KAAK,CAACyB,MAVnB;AAAA,6BAYE;AAAA,kBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAxBuBH,Q;UACLvB,W,EACJC,W;;;KAFSsB,Q","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"./default-avatar.png\";\nimport style from \"./UserMenu.module.css\";\n\nfunction stringToColor(string) {\n  let hash = 0;\n  for (let i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  return color;\n}\n\nfunction stringAvatar(name) {\n  if (name.trim().split(\" \").length > 1) {\n    return {\n      sx: {\n        backgroundColor: stringToColor(name),\n      },\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n    };\n  } else {\n    return {\n      style: {\n        backgroundColor: stringToColor(name),\n      },\n      children: `${name.split(\" \")[0][0]}`,\n    };\n  }\n}\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  const symbol = stringAvatar(name).children;\n  const bgcolor = stringAvatar(name).style;\n\n  return (\n    <div className={style.container}>\n      <div\n        onClick={() => (\n          <button\n            type=\"button\"\n            onClick={() => dispatch(authOperations.logOut())}\n          >\n            Loh Out\n          </button>\n        )}\n        style={bgcolor}\n        className={style.avatar}\n      >\n        <span>{symbol}</span>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}